[{"path":"https://irsn.github.io/SeaLev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yves Deville. Maintainer.","code":""},{"path":"https://irsn.github.io/SeaLev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"IRSN, Deville Y (2023). SeaLev: Convolution Method Sea Levels. R package version 0.4-4, https://irsn.github.io/SeaLev/.","code":"@Manual{,   title = {SeaLev: Convolution Method for Sea Levels},   author = {{IRSN} and Yves Deville},   year = {2023},   note = {R package version 0.4-4},   url = {https://irsn.github.io/SeaLev/}, }"},{"path":"https://irsn.github.io/SeaLev/index.html","id":"r-package-sealev","dir":"","previous_headings":"","what":"Convolution Method for Sea Levels","title":"Convolution Method for Sea Levels","text":"Yves Deville 2023-05-22","code":""},{"path":"https://irsn.github.io/SeaLev/index.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Convolution Method for Sea Levels","text":"SeaLev package R package funded IRSN/Behrig. devoted distribution Sea Level random variable (r.v.) say Z, viewed sum two independent r.vs X Y representing astronomical tide surge. precisely r.vs relate tide interval defined time interval separating two consecutive astronomical low tides. X astronomical high-tide level Y -called skew surge representing difference observed highest level astronomical high tide level. distribution X can regarded perfectly known. precisely, support X interval [xmin, xmax] end-points finite known, X admits continuous known density fX(x) interval. fitting Peaks Threshold (POT) model observed skew surges Yi one can regard tail distribution Y Generalized Pareto Distribution (GPD). tail distribution Z can computed convolution. Mind package quite old since created pre-RStudio era.","code":""},{"path":"https://irsn.github.io/SeaLev/index.html","id":"sealev-guide","dir":"","previous_headings":"","what":"SeaLev Guide","title":"Convolution Method for Sea Levels","text":"package vignette , yet SeaLev Package guide available shipped package pdf file (extra compression).","code":""},{"path":[]},{"path":"https://irsn.github.io/SeaLev/index.html","id":"using-the-remotes-package","dir":"","previous_headings":"","what":"Using the remotes package","title":"Convolution Method for Sea Levels","text":"R session use install package make ready use. can also select specific branch specific commit using suitable syntax install_github. instance install branch develop use See remotes package documentation details.","code":"library(remotes) install_github(\"IRSN/SeaLev\", dependencies = TRUE) install_github(\"IRSN/SeaLev@develop\", dependencies = TRUE)"},{"path":[]},{"path":"https://irsn.github.io/SeaLev/index.html","id":"cloning-the-repository","dir":"","previous_headings":"Clone, build and install","what":"Cloning the repository","title":"Convolution Method for Sea Levels","text":"can also clone repository install package. yet local SeaLev repository, use git clone clone SeaLev repository create SeaLev sub-directory current directory, .e. directory git command issued. course can work authorisation clone.","code":"git clone https://github.com/IRSN/SeaLev"},{"path":"https://irsn.github.io/SeaLev/index.html","id":"installation-1","dir":"","previous_headings":"Clone, build and install","what":"Installation","title":"Convolution Method for Sea Levels","text":"Move parent directory cloned repository use following command terminal create tarball source file produce source tarball SeaLev_x.y.z x, y z stand major, minor patch version numbers. can install command line Note must also packages required SeaLev installed. can also use RStudio IDE install package.","code":"R CMD build SeaLev R CMD INSTALL SeaLev_x.y.z"},{"path":"https://irsn.github.io/SeaLev/reference/Brest.tide.html","id":null,"dir":"Reference","previous_headings":"","what":"Density for the tidal level at Brest — Brest.tide","title":"Density for the tidal level at Brest — Brest.tide","text":"Gridded density tidal part sea level Brest.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/Brest.tide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density for the tidal level at Brest — Brest.tide","text":"","code":"data(Brest.tide)"},{"path":"https://irsn.github.io/SeaLev/reference/Brest.tide.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Density for the tidal level at Brest — Brest.tide","text":"format :   List 2 $x num [1:512] 100 101 102 102 103 ... $y num [1:512] 0.00 5.84e-06 1.12e-05 1.66e-05 2.20e-05 ...","code":""},{"path":"https://irsn.github.io/SeaLev/reference/Brest.tide.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Density for the tidal level at Brest — Brest.tide","text":"dataset gives example structure tidal   densities. desirable feature values y end   points zero (numerically ) first last   values x indicate Lowest possible value (Lowest   Astronomical High Tide) Highest Astronomical Tide (HAT). length vectors form \\(2^p+1\\)   \\(p\\) integer speed considerations convolution. However   present package vector y usually interpolated   longer one optimized choice length effect.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/Brest.tide.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Density for the tidal level at Brest — Brest.tide","text":"density obtained digitalizing image page 222   B. Simon's book.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/Brest.tide.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Density for the tidal level at Brest — Brest.tide","text":"B. Simon La marée océanique     côtière.   Institut océanographique, 2007.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/Brest.tide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density for the tidal level at Brest — Brest.tide","text":"","code":"data(Brest.tide) plot(Brest.tide, type = \"l\",    lwd = 2, col = \"SteelBlue3\")"},{"path":"https://irsn.github.io/SeaLev/reference/GPtail.html","id":null,"dir":"Reference","previous_headings":"","what":"Convolution of a spline density and a GP distribution — GPtail","title":"Convolution of a spline density and a GP distribution — GPtail","text":"Convolution spline density GP distribution.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/GPtail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convolution of a spline density and a GP distribution — GPtail","text":"","code":"GPtail(x,        threshold.y = NA,        distname.y = \"GPD\",        par.y = c(scale = 1, shape = 0.05),        covpar.y = NULL,        lambda = ifelse(is.na(threshold.y), 705.8, NA),        shift.y = ifelse(is.na(threshold.y), 0, threshold.y),        varnames = c(x = \"X\", y = \"Y\", z = \"Z\"),        pct.conf = c(95, 70),        use.covlambda = \"lambda\" %in% colnames(covpar.y),        deriv = !is.null(covpar.y),        Tlim = c(1, 1e+05),        pred.period = NULL,        pred.prob = NULL,        trace = 1L,        N = 2 * 1024,        N.ex = 300,        plot.which = 0)"},{"path":"https://irsn.github.io/SeaLev/reference/GPtail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convolution of a spline density and a GP distribution — GPtail","text":"x object S3 class \"SplineDensity\".  threshold.y Optional threshold.  distname.y Name distribution Generalized Pareto family. now,     \"GPD\" allowed.  par.y Numeric named vector GP parameters, see examples.     usually vector estimated parameters.  covpar.y Covariance matrix used delta method.       parameters \\(Y\\)-part, can contain row       column event rate lambda (see Details).       colnames rownames must agree must equal either       names(par.y) c(\"lambda\", names(par.y)).  lambda Rate used computation return levels.     given events year since return levels given     yearly basis.  varnames Names three variables, distribution: spline density, GP     convolution.  shift.y Shift distribution \\(Y\\), .e. location parameter     GPD.  pct.conf Confidence levels percent. given decreasing order.  use.covlambda Logical indicating uncertainty event rate     lambda taken account delta method     .  deriv Logical. TRUE, derivatives survival sum     \\(Z\\) computed.  Tlim Limits return periods used computations.  second     element Tlim[2] used present se maximal return     period.  pred.period NULL, vector giving periods predictions     (return levels confidence limits) computed returned     ret.lev data.frame.  pred.prob Alternative pred.period set return periods     return levels confidence bounds computed.  trace Integer level verbosity.  N Number discretization points range x, hence     length vector used x discrete convolution.  N.ex Number (tail) values \\(z\\) r.v. q\\(Z\\)     exact computation survival \\(S_Z(z)\\)     performed. values greater upper end-point     \\(X\\). values used results (density,     conditional expectation, ...) return levels     table rounded return periods used     interpolation. plot.Integer choosing plot, . value 0 plots nothing,     1 plot densities 2 plot survival..  prob Probability return levels wanted     ret.lev table. NULL value correspond default     vector values.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/GPtail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convolution of a spline density and a GP distribution — GPtail","text":"list similar returned convSL.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/GPtail.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convolution of a spline density and a GP distribution — GPtail","text":"Given density bounded r.v. \\(X\\), distribution   \\(Z := X + Y\\) computed \\(Y\\) r.v. independent   \\(X\\) Generalized Pareto distribution.   r.v. \\(Y\\) often excess POT model,   case exceedance rate \\(\\lambda\\) used get return   periods years.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/GPtail.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convolution of a spline density and a GP distribution — GPtail","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/SeaLev/reference/GPtail.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convolution of a spline density and a GP distribution — GPtail","text":"","code":"data(Brest.tide) SD <- SplineDensity(x = Brest.tide$x, f = Brest.tide$y,                     order = 2, nKnots = 24) #> leftDeriv = 0 9.381932e-06  #> rightDeriv = 0 -2.479663e-05  par.y <- c(\"scale\" = rgamma(1, shape = 2, scale = 30),            \"shape\" = 0.2 * runif(1)) res <- GPtail(x = SD, par.y = par.y, lambda = 1) #> o Period for return levels (pred.period) #>  [1] 1e+00 2e+00 5e+00 1e+01 2e+01 3e+01 4e+01 5e+01 6e+01 7e+01 8e+01 9e+01 #> [13] 1e+02 2e+02 5e+02 1e+03 1e+04 1e+05 #> ymax =    Inf #> E.y =   60.9 sd.y =   65.7 #> o computing the expectation of the exponential tail: muStar.x = 296.122 #> o Using closed form smax =     1830  ## change variable names varnames(res) <- c(x = \"Tide\", y = \"Skew surge\", z = \"Sea level\")  ## plot the densities plot(res)   ## plot the return level plot(res, which = 3) #> Warning: All values missing in L.95 and U.95 #> Warning: All values missing in L.70 and U.70 #> Warning: confidence limits for level 95% not found in data #> Warning: confidence limits for level 70% not found in data"},{"path":"https://irsn.github.io/SeaLev/reference/RSLplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Sea Level plot — RSLplot","title":"Return Sea Level plot — RSLplot","text":"Return Level Plot Sea Level convolution.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/RSLplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Sea Level plot — RSLplot","text":"","code":"RSLplot(data,            z = NULL,            duration = NULL,            lambda,            xlab = \"period\", ylab = \"level\",            mono  = TRUE,            lty.quant = \"solid\",            col.quant = ifelse(mono, \"black\", \"SteelBlue\"),            pct.conf = c(95, 70),            col.conf = NULL,            filled.conf = FALSE,            fill.conf = NULL,            lty.conf = ifelse(rep(filled.conf, 2),                              rep(NA, 2), c(\"dashed\", \"dotted\")),            rl.mark = 100,            text.mark = rl.mark,            col.mark = NULL,            Tlim = NULL,            problim = NULL,            below = NA,            alpha.below = 0.5,            grid = TRUE,            legend = TRUE,            pch.points = c(24, 22, 23),            col.points = c(\"black\", \"darkgray\"),            ...)"},{"path":"https://irsn.github.io/SeaLev/reference/RSLplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Sea Level plot — RSLplot","text":"data Data frame containing description return level curve     confidence limits. See Details.  z Empirical points add plot.  duration empirical points.  lambda Event rate (events year). used empirical     points added plot using x argument.  xlab Label x-axis.  ylab Label y-axis.  mono Monochrome plot.  lty.quant Line type quantile (return level curve).  col.quant Line color quantile (return level curve).  pct.conf Confidence levels (accordance content data.frame     data. col.conf Line colors confidence limits,     order pct.conf.  filled.conf confidence regions filled?  fill.conf Colors confidence regions filled.  lty.conf Line types confidence regions limits. using NA,     plot limits (lower upper) cancelled may     fill.conf TRUE.  rl.mark Return level(s) materialize vertical line.  text.mark Label(s) display near mark.rl lines .  col.mark Color(s) marK.rl.  Tlim Limits x-axis given time (return periods).  problim Limits x-axis given probability. one two     arguments Tlim problim can given.  level semi-transparent rectangle drawn,     meaning corresponding return levels used.     sea-level convolution context, normally HAT       + threshold distribution sea-level conditional     surge level exceeding threshold.  alpha.value transparency (partially) occult     region plot lying minimal level validity     convolution, see Details. value 0 means fully     transparent rectangle (effect), value 1 means     fully opaque one. using device support     transparency, values 0 1 possible.  grid Logical. TRUE, grid dotted lines added.  legend Logical. TRUE, legend added.  pch.points Vector symbols used points given z (    ). z numeric vector, first element     used. z list, given symbols used     correspondence list elements.  col.points Vector colours used way pch.points.  ... arguments pass plot. can main,     ylim, etc.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/RSLplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return Sea Level plot — RSLplot","text":"function roughly copy RLplot package   Renext supplementary formal arguments. Line types colors confidence regions given vectors   elements corresponding percents given   pct.conf. levels available data.frame   data, means suitable columns indicate   limits. instance 95 percent region can displayed   two columns L.95 U.95 exist provide   relevant information.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/RSLplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Sea Level plot — RSLplot","text":"None.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/RSLplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return Sea Level plot — RSLplot","text":"Yves Deville","code":""},{"path":[]},{"path":"https://irsn.github.io/SeaLev/reference/SeaLev-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Convolution Method for Sea Levels — SeaLev-package","title":"Convolution Method for Sea Levels — SeaLev-package","text":"Derive probability distribution sea level   distribution tidal component distribution   surge component. package development initiated, directed financed   french Institut de radioprotection et de sûreté   nucléaire (IRSN).","code":""},{"path":"https://irsn.github.io/SeaLev/reference/SeaLev-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convolution Method for Sea Levels — SeaLev-package","text":"DESCRIPTION file:   package yet installed build time.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/SeaLev-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convolution Method for Sea Levels — SeaLev-package","text":"IRSN Yves Deville Maintainer: Yves Deville <deville.yves@alpestat.com>","code":""},{"path":"https://irsn.github.io/SeaLev/reference/SeaLev-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convolution Method for Sea Levels — SeaLev-package","text":"convolution method Joint Probability Method (JPM)   initiated Pugh Vassie D. T. Pugh J. M. Vassie   \"Extreme sea-levels tide surge probability\" Proceeding   16-th Coastal Engineering Conference, 1978, Hamburg. method described illustrated book (french)   B. Simon B. Simon. La marée océanique   côtière.  Institut   océanographique, 2007.","code":""},{"path":[]},{"path":"https://irsn.github.io/SeaLev/reference/SplineDensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a spline density from a provided grid density — SplineDensity","title":"Build a spline density from a provided grid density — SplineDensity","text":"Build spline density provided grid density. methods plot, print predict can used.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/SplineDensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a spline density from a provided grid density — SplineDensity","text":"","code":"SplineDensity(x, f,               xmin = min(x), xmax = max(x),               leftDerivEst = c(0L, 1L), rightDerivEst = c(0L, 1L),               leftDeriv = NULL, rightDeriv = NULL,               knots = NULL,               nKnots = 24L,               order = 4L,               plot = TRUE,               check = FALSE)"},{"path":"https://irsn.github.io/SeaLev/reference/SplineDensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a spline density from a provided grid density — SplineDensity","text":"x Numeric vector values density provided.  f Numeric vector density values corresponding x.  xmin Left (lower) end-point distribution.  xmax Right (upper) end-point.  leftDerivEst Integer vector giving order derivatives     estimated finite differences points x     f. values used even derivatives     provided.  rightDerivEst Similar leftDerivEst.  leftDeriv Vector known derivatives left end-point (). given     values order \\(0\\) \\(k-2\\) order     \\(k\\) order. Unknown values given NA.  rightDeriv Similar rightDeriv upper end-point.  knots numeric vector knots ascending order.  nKnots Number knots used knots provided.  order spline order \\(k\\), e.g. \\(k = 1\\) broken line spline     k = 4 cubic spline.  plot Logical. TRUE plot provided.  check Logical. TRUE, check computations     carried results printed.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/SplineDensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a spline density from a provided grid density — SplineDensity","text":"list object can used density computations. object   given S3 class \"SplineDensity\". structure   list might evolve future life package.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/SplineDensity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build a spline density from a provided grid density — SplineDensity","text":"spline approximation given density found   constrained regression. First, suitable basis B-splines   built. coefficients found order minimise   distance provided density values constraints arising   boundary conditions normalisation condition.   Boundary conditions can given. default, values   density first order derivative taken equal   finite difference estimation x f.   works correctly grid fine enough,   provided values correspond continuous function   continuous derivative closed interval end-points   xmin xmax.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/SplineDensity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Build a spline density from a provided grid density — SplineDensity","text":"de Boor, C (2001) Practical Guide Splines, revised   edition. Springer-Verlag.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/SplineDensity.html","id":"caution","dir":"Reference","previous_headings":"","what":"Caution","title":"Build a spline density from a provided grid density — SplineDensity","text":"spline warranted positive. case   positive density values provided f grid   fine enough.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/SplineDensity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Build a spline density from a provided grid density — SplineDensity","text":"Yves Deville","code":""},{"path":[]},{"path":"https://irsn.github.io/SeaLev/reference/SplineDensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a spline density from a provided grid density — SplineDensity","text":"","code":"data(Brest.tide) SD <- SplineDensity(x = Brest.tide$x, f = Brest.tide$y) #> leftDeriv = 0 9.381932e-06 NA  #> rightDeriv = 0 -2.479663e-05 NA  SD24 <- SplineDensity(x = Brest.tide$x, f = Brest.tide$y, nKnots = 24) #> leftDeriv = 0 9.381932e-06 NA  #> rightDeriv = 0 -2.479663e-05 NA   ## approximate a bounded GPD (negative shape) by a spline density shape <- 2 + rexp(1) x <- seq(from = 0, to = 1, length.out = 200) f <- (1 - x )^(shape - 1) * shape SDGP <- SplineDensity(x = x, f = f) #> leftDeriv = 3.342225 -7.80186 NA  #> rightDeriv = 0 -0.00274446 NA  plot(SDGP)  #> NULL"},{"path":"https://irsn.github.io/SeaLev/reference/convSL.html","id":null,"dir":"Reference","previous_headings":"","what":"Convolution for Sea Levels tide and surge — convSL","title":"Convolution for Sea Levels tide and surge — convSL","text":"Computes distribution return levels sea levels   two parts ‘tidal’ ‘surge’ using convolution   method.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/convSL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convolution for Sea Levels tide and surge — convSL","text":"","code":"convSL(dens.x,           shift.x = 0,           threshold.y = NA,           distname.y = \"exponential\",           shift.y = ifelse(is.na(threshold.y), 0, threshold.y),           par.y = c(\"rate\" = 0.1),           covpar.y = NULL,           lambda = ifelse(is.na(threshold.y), 705.8, NA),           pct.conf = c(95, 70),           use.covlambda = \"lambda\" %in% colnames(covpar.y),           prob = NULL,           prob.max = ifelse(is.na(threshold.y), 1-1e-8, 1-1e-5),           pred.period = NULL,           N = 2048L,           N.quad = NULL,           Tlim = c(1, 1e+5),           deriv = TRUE,           plot = TRUE,           show.x = TRUE,           show.asympt = TRUE,           alpha.below = 0.5,           trace = 0,           ...)"},{"path":"https://irsn.github.io/SeaLev/reference/convSL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convolution for Sea Levels tide and surge — convSL","text":"dens.x List containing density tidal level.  must contain     two vectors $x $y giving points density     curve. x vector must sorted ascending order,     y vector must contain non negative values end values     equal 0 nearly . first last values x     give lowest highest astronomical tides shift     shift.x.  shift.x Numeric constant add total level e.g.  reference level     density dens.x shifted. can     useful change reference elevation.  threshold.y Threshold used surge POT fit. surge excesses     threshold assumed follow known distribution.  distname.y distribution name surge excesses threshold.     supported distribution names fRenouv     Renext package. distribution values non-negative     reals. distributions one two parameters: gpd     distribution , location parameter must 0 since     applies excesses.  shift.y Numeric constant dimension variable Y,     used shift distribution. POT distribution used     automatically set threshold.y thus     distribution assumed excesses     threshold. cases, normally zero.  par.y Named list vector containing values     parameters. Parameters default values corresponding     densities distribution functions can omitted     plugged POT output. instance location parameter     gpd given take default value     0.  covpar.y covariance matrix parameters y-part. can also     contain row column event rate lambda (see     Details). colnames rownames must agree must equal     either names(par.y) c(\"lambda\",     names(par.y)).  lambda event rate surge POT. given events     year since return levels given yearly basis.  pct.conf Confidence levels percent. given decreasing order.  use.covlambda Logical indicating uncertainty event rate     lambda taken account delta method     .  prob Probability return levels wanted     ret.lev table. NULL value correspond default     vector values.  prob.max Maximal probability return level table/plot.  pred.period NULL, vector giving periods predictions     (return levels confidence limits) computed     returned pred data.frame. results returned     pred data.frame.  N Number points convolution grid. power two     best computation speed.  N.quad Number quadrature points, corresponding high return periods.  Tlim Limits return periods.  deriv Logical. TRUE numerical derivatives used compute     approximate confidence intervals delta method.           plot Logical. return level plot drawn?  show.x Logical indicating \"tidal return level\" curve     added return level plot. See Details .  show.asympt Logical. TRUE, curve showing asymptotic behavior     added return level plot. available     exponential GPD positive shape. first case,     added curve close curve obtained convolution.     second case, added curve broadly parallel     convolution curve. added curve indicates shape curve     large return periods.  alpha.value transparency (partially) occult region plot     lying minimal level validity convolution, see     Details. value 0 means fully transparent     rectangle (effect), value 1 means fully opaque     one. using device support transparency,     values 0 1 possible.  trace Integer giving level verbosity. value 0 leads     printing nothing.  ... arguments passed RSLplot     plot. commonly used Tlim problim     RSLplot, main, ylim plot.      arguments z duration can also used add     empirical points plot, see vignette shipped     package examples.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/convSL.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convolution for Sea Levels tide and surge — convSL","text":"function computes density distribution functions   surge \\(Z = X +Y\\) \\(X\\) tidal level   \\(Y\\) random surge level given (conditional) distribution   threshold. tidal level \\(X\\) distribution given   dens.x. two parts \\(X\\) \\(Y\\) assumed   independent hence density \\(Z\\) can found using   numerical convolution. Since distribution surge \\(Y\\) given   \\(Y > u \\) \\(u\\) threshold,   distribution \\(Z\\) known \\(Z > \\textrm{HAT} +   u\\). Therefore corresponding part   return level curve must considered. left-side part can   considered extrapolation small surge levels   unwarranted. approximate inference derived using \"delta method\"   covariance matrix given covpar.y ().  return level   \\(z(T)\\) corresponding $$z(T) = q_Z(p) \\qquad p = 1 -   \\frac{1}{\\lambda T}$$   \\(q_Z(p)\\) quantile function \\(Z\\).    quantile function deduced distribution function   event rate \\(\\lambda\\) replaced estimation   provided lambda formal. Depending value use.covlambda impact   estimation \\(\\lambda\\) return level taken   account . plot TRUE, return level plot shown using   log scale return periods. return level curve   asymptote large return periods distribution Y   exponential. plot show.x TRUE, conditional   expectation curve shown. curve shows conditional expected   tidal level $$\\textrm{E}[X \\vert Z=z]$$   \\(z=z(T)\\) taken equal return level associated   period \\(T\\). curve might visible can   necessary adjust ylim argument. curve points fact   return levels sea levels conditional   tidal level, therefore sea levels corresponding   given tide much greater suggested return level curve. can shown distribution surge exponential   conditional expectation constant large return periods   \\(T\\) takes value < HAT. distribution surge GPD   positive shape,   conditional expectation increasing slow rate.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/convSL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convolution for Sea Levels tide and surge — convSL","text":"list elements dens.x, dens.y, dens.z Density tidal level, surge total sea level.  dist.x, dist.y, dist.z Distribution functions densities  z, T Numeric vectors return levels return periods.     computed values values T     take 'pretty' values.  dSy, dSz, dzz Matrices columns giving derivatives Sy, Sz     z respect parameters taken     par.y. dz extra column placed position     1 containing derivative respect event rate     use.covlambda TRUE.  ret.lev Data.frame containing return levels given default     probabilities. contains columns probability, return     period, return level (quantile) well confidence limits     return level. use.covlambda TRUE     confidence limits associated return periods (    probabilities), least relatively small probabilities.  pred Data.frame containing predicted return levels given     default return levels.  condExp.x conditional expectation vector, correspondence grid     density x.  logmomExp distribution \\(Y\\) exponential, logarithm     exponential moment     \\(\\textrm{E}[e^{X/\\sigma_Y}]\\)     \\(\\sigma_Y\\) scale parameter exponential     distribution. See vignette shipped package     information.  logmomExp Character vector","code":""},{"path":"https://irsn.github.io/SeaLev/reference/convSL.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convolution for Sea Levels tide and surge — convSL","text":"D. T. Pugh J. M. Vassie (1978)   \"Extreme sea-levels tide surge probability\"   Proceeding 16th Coastal Engineering Conference, Hamburg. B. Simon La marée océanique     côtière.   Institut océanographique, 2007.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/convSL.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convolution for Sea Levels tide and surge — convSL","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/SeaLev/reference/convSL.html","id":"warnings","dir":"Reference","previous_headings":"","what":"Warnings","title":"Convolution for Sea Levels tide and surge — convSL","text":"densities conditional expectations given wide   grid small probability exceedance   \\(1-F_Z(z)\\), say less 1e-4. numerical   precision weakens small values \\(F_Z(z)\\).   future versions, vectors truncated suitable value.   rule robust determination (respect distribution   surges) still needs investigations. Yet minimal probability   exceedance 1e-4 seems good indication. distribution surge can unbounded density,    e.g. Weibull gamma. may affect precision discrete    approximation used numerical convolution.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/convSL.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convolution for Sea Levels tide and surge — convSL","text":"non-zero value used shift.x, returned density   \\(X\\) left unchanged, .e. shifted.   distribution \\(Z\\) shifted. contrary non-zero   shift.y given, density \\(Y\\) shifted. Thus   POT model given threshold \\(u\\) distribution   specified input excesses \\(Y-u\\),   dens.y dist.y objects returned list   \\(Y\\) levels.","code":""},{"path":[]},{"path":"https://irsn.github.io/SeaLev/reference/convSL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convolution for Sea Levels tide and surge — convSL","text":"","code":"## This example NEEDS Renext  data(Brest); data(Brest.tide)  ## POT distname.y <- \"exponential\" fit.exp <-   Renouv(x = Brest$OTdata$Surge,          effDuration = as.numeric(Brest$OTinfo$effDuration),          threshold = 50, distname.y = distname.y,          main = \"exponential POT for surge\") #> Special inference for the exponential case without history #> Warning: uncertainty on the rate not taken into account yet  in the exponential with no history case   ## plug results into convSL res.exp <-    convSL(dens.x = Brest.tide,           threshold.y = 50, distname.y = distname.y,           lambda = fit.exp$estimate[\"lambda\"],           par.y = fit.exp$estimate[\"rate\"],           covpar.y = fit.exp$cov,           use.covlambda = TRUE, main = \"exponential\")   ## some results  round(res.exp$pred, digits = 0) #>       prob period quant L.95 U.95 L.70 U.70 #> 100      1  1e+02   462  459  464  460  463 #> 200      1  2e+02   469  466  473  467  471 #> 500      1  5e+02   479  474  483  477  481 #> 1000     1  1e+03   486  481  492  483  489 #> 2000     1  2e+03   494  487  500  490  497 #> 3000     1  3e+03   498  491  505  494  502 #> 4000     1  4e+03   501  494  508  497  505 #> 5000     1  5e+03   503  496  511  499  507 #> 6000     1  6e+03   505  498  513  501  509 #> 7000     1  7e+03   507  499  515  503  511 #> 8000     1  8e+03   508  500  516  504  513 #> 9000     1  9e+03   510  501  518  505  514 #> 10000    1  1e+04   511  502  519  506  515 #> 20000    1  2e+04   518  509  527  513  523 #> 50000    1  5e+04   528  517  538  522  533 #> 1e+05    1  1e+05   535  524  547  529  541 #> 1e+06    1  1e+06   560  545  574  552  567 #> 1e+07    1  1e+07   584  566  602  575  593 plot(res.exp$dens.z, type =\"l\",      main = \"density of Z\", xlab = \"m\", ylab = \"\")    ## POT with gpd with two distname.y <- \"gpd\"  fit.gpd <-    Renouv(x = Brest$OTdata$Surge,           effDuration = as.numeric(Brest$OTinfo$effDuration),           threshold = 50, distname.y = distname.y,           main = \"gpd POT for surge\")  res.gpd1 <-    convSL(dens.x = Brest.tide,           threshold.y = 50, distname.y = distname.y,           lambda = fit.gpd$estimate[\"lambda\"],           par.y = fit.gpd$est.y,           covpar.y = fit.gpd$cov,           use.covlambda = TRUE,           main = \"gpd with uncertainty on \\\"lambda\\\"\") #> Warning: 'show.asympt' not yet implemented for GPD with negative shape   ## ignore the uncertainty on 'lambda' res.gpd2 <-     convSL(dens.x = Brest.tide,            threshold.y = 50, distname.y = distname.y,            lambda = fit.gpd$estimate[\"lambda\"],            par.y = fit.gpd$est.y,            covpar.y = fit.gpd$cov,            use.covlambda = FALSE,            main = \"gpd ignoring uncertainty on \\\"lambda\\\"\") #> Warning: 'show.asympt' not yet implemented for GPD with negative shape"},{"path":"https://irsn.github.io/SeaLev/reference/convSLOld.html","id":null,"dir":"Reference","previous_headings":"","what":"Convolution for Sea Levels tide and surge — convSLOld","title":"Convolution for Sea Levels tide and surge — convSLOld","text":"Computes distribution return levels sea levels   two parts ‘tidal’ ‘surge’ using convolution   method.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/convSLOld.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convolution for Sea Levels tide and surge — convSLOld","text":"","code":"convSLOld(dens.x,              shift.x = 0,              threshold.y = NA,              distname.y = \"exponential\",              shift.y = ifelse(is.na(threshold.y), 0, threshold.y),              par.y = list(rate = 0.1),              covpar.y = NULL,              lambda = ifelse(is.na(threshold.y), 705.8, NA),              pct.conf = c(95, 70),              use.covlambda = \"lambda\" %in% colnames(covpar.y),              prob = NULL,              prob.max = ifelse(is.na(threshold.y), 1-1e-8, 1-1e-5),              pred.period = NULL,              N = 2048L,              plim.y = c(1e-12, 1 - 1e-12),              plot = TRUE,              show.x = TRUE,              show.asympt = TRUE,              alpha.below = 0.5,              trace = 0,              ...)"},{"path":"https://irsn.github.io/SeaLev/reference/convSLOld.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convolution for Sea Levels tide and surge — convSLOld","text":"dens.x List containing density tidal level.  must contain     two vectors $x $y giving points density     curve. x vector must sorted ascending order,     y vector must contain non negative values end values     equal 0 nearly . first last values x     give lowest highest astronomical tides shift     shift.x.  shift.x Numeric constant add total level e.g.  reference level     density dens.x shifted. can     useful change reference elevation.  threshold.y Threshold used surge POT fit. surge excesses     threshold assumed follow known distribution.  distname.y distribution name surge excesses threshold.     supported distribution names fRenouv     Renext package. distribution values non-negative     reals. distributions one two parameters: gpd     distribution , location parameter must 0 since     applies excesses.  shift.y Numeric constant dimension variable Y,     used shift distribution. POT distribution used     automatically set threshold.y thus     distribution assumed excesses     threshold. cases, normally zero.  par.y Named list vector containing values     parameters. Parameters default values corresponding     densities distribution functions can omitted     plugged POT output. instance location parameter     gpd given take default value     0.  covpar.y covariance matrix parameters y-part. can also     contain row column event rate lambda (see     Details). colnames rownames must agree must equal     either names(par.y) c(\"lambda\",     names(par.y)).  lambda event rate surge POT. given events     year since return levels given yearly basis.  pct.conf Confidence levels percent. given decreasing order.  use.covlambda Logical indicating uncertainty event rate     lambda taken account delta method     .  prob Probability return levels wanted     ret.lev table. NULL value correspond default     vector values.  prob.max Maximal probability return level table/plot.  pred.period NULL, vector giving periods predictions     (return levels confidence limits) computed     returned pred data.frame. results returned     pred data.frame.  N Number points convolution grid. power two     best computation speed.  plim.y Limits y-grid. grid limits ymin ymax     quantile associated plim.y[1] plim.y[2]     respectively. numerical reasons value plim.y[2]     taken 1-1e^-06           plot Logical. return level plot drawn?  show.x Logical indicating \"tidal return level\" curve     added return level plot. See Details .  show.asympt Logical. TRUE, curve showing asymptotic behavior     added return level plot. available     exponential GPD positive shape. first case,     added curve close curve obtained convolution.     second case, added curve broadly parallel     convolution curve. added curve indicates shape curve     large return periods.  alpha.value transparency (partially) occult region plot     lying minimal level validity convolution, see     Details. value 0 means fully transparent     rectangle (effect), value 1 means fully opaque     one. using device support transparency,     values 0 1 possible.  trace Integer giving level verbosity. value 0 leads     printing nothing.  ... arguments passed RSLplot     plot. commonly used Tlim problim     RSLplot, main, ylim plot.      arguments z duration can also used add     empirical points plot, see vignette shipped     package examples.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/convSLOld.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convolution for Sea Levels tide and surge — convSLOld","text":"function computes density distribution functions   surge \\(Z = X +Y\\) \\(X\\) tidal level   \\(Y\\) random surge level given (conditional) distribution   threshold. tidal level \\(X\\) distribution given   dens.x. two parts \\(X\\) \\(Y\\) assumed   independent hence density \\(Z\\) can found using   numerical convolution. Since distribution surge \\(Y\\) given   \\(Y > u \\) \\(u\\) threshold,   distribution \\(Z\\) known \\(Z > \\textrm{HAT} +   u\\). Therefore corresponding part   return level curve must considered. left-side part can   considered extrapolation small surge levels   unwarranted. approximate inference derived using \"delta method\"   covariance matrix given covpar.y ().  return level   \\(z(T)\\) corresponding $$z(T) = q_Z(p) \\qquad p = 1 -   \\frac{1}{\\lambda T}$$   \\(q_Z(p)\\) quantile function \\(Z\\).    quantile function deduced distribution function   event rate \\(\\lambda\\) replaced estimation   provided lambda formal. Depending value use.covlambda impact   estimation \\(\\lambda\\) return level taken   account . plot TRUE, return level plot shown using   log scale return periods. return level curve   asymptote large return periods distribution Y   exponential. plot show.x TRUE, conditional   expectation curve shown. curve plots conditional expected   tidal level $$\\textrm{E}[X \\vert Z=z]$$   \\(z=z(T)\\) taken equal return level associated   period \\(T\\). curve might visible can   necessary adjust ylim argument. curve points fact   return levels sea levels conditional   tidal level, therefore sea levels corresponding   given tide much greater suggested return level curve. can shown distribution surge exponential    conditional expectation constant large return periods    \\(T\\) takes value < HAT. distribution surge GPD    positive shape,    conditional expectation increasing slow rate.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/convSLOld.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convolution for Sea Levels tide and surge — convSLOld","text":"list elements dens.x, dens.y, dens.z Density tidal level, surge total sea level.  dist.x, dist.y, dist.z Distribution functions densities  dFy, dFz, dzz Matrices columns giving derivatives Fy, Fz     z respect parameters taken     par.y. dz extra column placed position     1 containing derivative respect event rate     use.covlambda TRUE.  ret.lev Data.frame containing return levels given default     probabilities. contains columns probability, return     period, return level (quantile) well confidence limits     return level. use.covlambda TRUE     confidence limits associated return periods (    probabilities), least relatively small probabilities.  pred Data.frame containing predicted return levels given     default return levels.  condExp.x conditional expectation vector, correspondence grid     density x.  logmomExp distribution \\(Y\\) exponential, logarithm     exponential moment     \\(\\textrm{E}[e^{X/\\sigma_Y}]\\)     \\(\\sigma_Y\\) scale parameter exponential     distribution. See vignette shipped package     information.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/convSLOld.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convolution for Sea Levels tide and surge — convSLOld","text":"D. T. Pugh J. M. Vassie (1978)   \"Extreme sea-levels tide surge probability\"   Proceeding 16th Coastal Engineering Conference, Hamburg. B. Simon La marée océanique     côtière.   Institut océanographique, 2007.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/convSLOld.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convolution for Sea Levels tide and surge — convSLOld","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/SeaLev/reference/convSLOld.html","id":"warnings","dir":"Reference","previous_headings":"","what":"Warnings","title":"Convolution for Sea Levels tide and surge — convSLOld","text":"densities conditional expectations given wide   grid small probability exceedance   \\(1-F_Z(z)\\), say less 1e-4. numerical   precision weakens small values \\(F_Z(z)\\).   future versions, vectors truncated suitable value.   rule robust determination (respect distribution   surges) still needs investigations. Yet minimal probability   exceedance 1e-4 seems good indication. distribution surge can unbounded density,    e.g. Weibull gamma. may affect precision discrete    approximation used numerical convolution.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/convSLOld.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convolution for Sea Levels tide and surge — convSLOld","text":"non-zero value used shift.x, returned density   \\(X\\) left unchanged, .e. shifted.   distribution \\(Z\\) shifted. contrary non-zero   shift.y given, density \\(Y\\) shifted. Thus   POT model given threshold \\(u\\) distribution   specified input excesses \\(Y-u\\),   dens.y dist.y objects returned list   \\(Y\\) levels.","code":""},{"path":[]},{"path":"https://irsn.github.io/SeaLev/reference/convSLOld.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convolution for Sea Levels tide and surge — convSLOld","text":"","code":"## This example NEEDS Renext  data(Brest); data(Brest.tide)  ## POT distname.y <- \"exponential\" fit.exp <-   Renouv(x = Brest$OTdata$Surge,          effDuration = as.numeric(Brest$OTinfo$effDuration),          threshold = 50, distname.y = distname.y,          main = \"exponential POT for surge\") #> Special inference for the exponential case without history #> Warning: uncertainty on the rate not taken into account yet  in the exponential with no history case   ## plug results into convSL res.exp <-    convSL(dens.x = Brest.tide,           threshold.y = 50, distname.y = distname.y,           lambda = fit.exp$estimate[\"lambda\"],           par.y = fit.exp$estimate[\"rate\"],           covpar.y = fit.exp$cov,           use.covlambda = TRUE, main = \"exponential\")   ## some results  round(res.exp$pred, digits = 0) #>       prob period quant L.95 U.95 L.70 U.70 #> 100      1  1e+02   462  459  464  460  463 #> 200      1  2e+02   469  466  473  467  471 #> 500      1  5e+02   479  474  483  477  481 #> 1000     1  1e+03   486  481  492  483  489 #> 2000     1  2e+03   494  487  500  490  497 #> 3000     1  3e+03   498  491  505  494  502 #> 4000     1  4e+03   501  494  508  497  505 #> 5000     1  5e+03   503  496  511  499  507 #> 6000     1  6e+03   505  498  513  501  509 #> 7000     1  7e+03   507  499  515  503  511 #> 8000     1  8e+03   508  500  516  504  513 #> 9000     1  9e+03   510  501  518  505  514 #> 10000    1  1e+04   511  502  519  506  515 #> 20000    1  2e+04   518  509  527  513  523 #> 50000    1  5e+04   528  517  538  522  533 #> 1e+05    1  1e+05   535  524  547  529  541 #> 1e+06    1  1e+06   560  545  574  552  567 #> 1e+07    1  1e+07   584  566  602  575  593 plot(res.exp$dens.z, type =\"l\",      main = \"density of Z\", xlab = \"m\", ylab = \"\")    ## POT with gpd with two distname.y <- \"gpd\"  fit.gpd <-    Renouv(x = Brest$OTdata$Surge,           effDuration = as.numeric(Brest$OTinfo$effDuration),           threshold = 50, distname.y = distname.y,           main = \"gpd POT for surge\")  res.gpd1 <-    convSL(dens.x = Brest.tide,           threshold.y = 50, distname.y = distname.y,           lambda = fit.gpd$estimate[\"lambda\"],           par.y = fit.gpd$est.y,           covpar.y = fit.gpd$cov,           use.covlambda = TRUE,           main = \"gpd with uncertainty on \\\"lambda\\\"\") #> Warning: 'show.asympt' not yet implemented for GPD with negative shape   ## ignore the uncertainty on 'lambda' res.gpd2 <-     convSL(dens.x = Brest.tide,            threshold.y = 50, distname.y = distname.y,            lambda = fit.gpd$estimate[\"lambda\"],            par.y = fit.gpd$est.y,            covpar.y = fit.gpd$cov,            use.covlambda = FALSE,            main = \"gpd ignoring uncertainty on \\\"lambda\\\"\") #> Warning: 'show.asympt' not yet implemented for GPD with negative shape"},{"path":"https://irsn.github.io/SeaLev/reference/momGen.html","id":null,"dir":"Reference","previous_headings":"","what":"Generating Function of the Moments or Cumulants — momGen","title":"Generating Function of the Moments or Cumulants — momGen","text":"Generating Function Moments Cumulants.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/momGen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generating Function of the Moments or Cumulants — momGen","text":"","code":"momGen(object, t = NULL, tmax = 0.4, log = TRUE)"},{"path":"https://irsn.github.io/SeaLev/reference/momGen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generating Function of the Moments or Cumulants — momGen","text":"object object class \"SplineDensity\".  t Numeric vector values generating function     evaluated.  tmax t missing, numerical vector values     0.0 tmax used.  log Logical. TRUE returned value generating function     cumulants rather moments.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/momGen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generating Function of the Moments or Cumulants — momGen","text":"numeric vector containing values generating function.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/momGen.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generating Function of the Moments or Cumulants — momGen","text":"generating function computed using closed form obtained   recursive integration parts. generating functions \\(M_X\\) \\(K_X\\) moments   defined \\(M_X(t) = \\mathrm{E}[e^{tX}]\\)   \\(K_X(t) = \\log M_X(t)\\). function \\(K_X\\)   increasing convex \\(K_X(0) = 0\\). See Wikipedia's page   cumulants        moment generating function.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/momGen.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Generating Function of the Moments or Cumulants — momGen","text":"generating function cumulants often increases   rapidly \\(t\\) take large values unless \\(t\\)   remains close zero.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/momGen.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generating Function of the Moments or Cumulants — momGen","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/SeaLev/reference/momGen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generating Function of the Moments or Cumulants — momGen","text":"","code":"opar <- par(mfrow = c(2, 1)) ck <- rSplineDensity(order = 4, xmax = 10) #> Warning: Recycling array of length 1 in vector-array arithmetic is deprecated. #>   Use c() or as.vector() instead. plot(ck, main = \"spline density\") #> NULL m <- momGen(ck, tmax = 2) #> Ex =  4.70, Vx =  9.21  par(opar)"},{"path":"https://irsn.github.io/SeaLev/reference/plot.GPtail.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for the ","title":"Plot method for the ","text":"Plot method \"GPtail\" class.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/plot.GPtail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for the ","text":"","code":"# S3 method for GPtail plot(x, y = NULL, which = 1, ...)"},{"path":"https://irsn.github.io/SeaLev/reference/plot.GPtail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for the ","text":"x object GPtail class. y used yet. Integer choice plot type: 1 plots   probability densities three r.vs \\(X\\), \\(Y\\) \\(Z\\),   2 plots cumulative distribution function \\(Z\\)   3 shows return level plot produced   RSLplot. ... arguments passed plot. used   now.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/plot.GPtail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for the ","text":"Nothing.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/plot.SplineDensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for ","title":"Plot method for ","text":"Plot method SplineDensity objects.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/plot.SplineDensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for ","text":"","code":"# S3 method for SplineDensity plot(x, y = NULL, ...)"},{"path":"https://irsn.github.io/SeaLev/reference/plot.SplineDensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for ","text":"x SplineDensity object.  y used yet.  ... used yet.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/plot.SplineDensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for ","text":"None.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/plot.SplineDensity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot method for ","text":"density value computed fine grid using predict   method class. original points used creation   object shown well.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/predict.SplineDensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict (or evaluate) a Spline Density. — predict.SplineDensity","title":"Predict (or evaluate) a Spline Density. — predict.SplineDensity","text":"Predict (evaluate) Spline Density.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/predict.SplineDensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict (or evaluate) a Spline Density. — predict.SplineDensity","text":"","code":"# S3 method for SplineDensity predict(object, newdata = NULL, deriv = 0, ...)"},{"path":"https://irsn.github.io/SeaLev/reference/predict.SplineDensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict (or evaluate) a Spline Density. — predict.SplineDensity","text":"object SplineDensity object.  newdata Numeric vector giving values density (    derivative) evaluated.  deriv Integer giving derivation order. can set \\(-1\\)     get indefinite integral.  ... used yet.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/predict.SplineDensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict (or evaluate) a Spline Density. — predict.SplineDensity","text":"list containing two numeric vectors x y representing prediction abscissae corresponding predicted   values.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/predict.SplineDensity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict (or evaluate) a Spline Density. — predict.SplineDensity","text":"density one derivatives cumulative distribution   function evaluated points given newdata.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/predict.SplineDensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict (or evaluate) a Spline Density. — predict.SplineDensity","text":"","code":"set.seed(1234) SD <- rSplineDensity(order = 4, xmax = 10) #> Warning: Recycling array of length 1 in vector-array arithmetic is deprecated. #>   Use c() or as.vector() instead. xg <- seq(from = -1, to = 11, length.out = 200) p <- predict(SD, newdata = xg) plot(p, type = \"l\", main = \"density\")  pm1 <- predict(SD, newdata = xg, deriv = -1) plot(pm1, type = \"l\", main = \"cdf\")"},{"path":"https://irsn.github.io/SeaLev/reference/rSplineDensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Random Spline Density — rSplineDensity","title":"Random Spline Density — rSplineDensity","text":"Random Spline Density.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/rSplineDensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random Spline Density — rSplineDensity","text":"","code":"rSplineDensity(knots,                nx = 200L,                nKnots = 10L,                xmin = 0.0, xmax = 1.0,                order = 4L, plot = TRUE)"},{"path":"https://irsn.github.io/SeaLev/reference/rSplineDensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random Spline Density — rSplineDensity","text":"knots Numeric vector knots, given increasing order.  nx Number default evaluation points.  nKnots Number knots knots given.  xmin Lower end-point density.  xmax Upper end-point density.  order Order spline, .e. degree polynomial pieces minus     one. ord = 2 one gets broken line spline     ord = 4 leads cubic spline.  plot Logical. TRUE plot shown.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/rSplineDensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random Spline Density — rSplineDensity","text":"object class \"SplineDensity\".","code":""},{"path":"https://irsn.github.io/SeaLev/reference/rSplineDensity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Random Spline Density — rSplineDensity","text":"sequence knots order, basis B-splines   built. vector positive random coefficients drawn suitably   normalized ensure spline integrates one support.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/rSplineDensity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Random Spline Density — rSplineDensity","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/SeaLev/reference/rSplineDensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random Spline Density — rSplineDensity","text":"","code":"set.seed(1234) SD <- rSplineDensity(order = 4, xmax = 10) #> Warning: Recycling array of length 1 in vector-array arithmetic is deprecated. #>   Use c() or as.vector() instead. plot(SD, main = \"spline density\")  #> NULL ## uniform knots sequence SDu <- rSplineDensity(order = 4, knots = 0:10) #> Warning: Recycling array of length 1 in vector-array arithmetic is deprecated. #>   Use c() or as.vector() instead. plot(SDu, main = \"spline density with uniform knots sequence.\")  #> NULL"},{"path":"https://irsn.github.io/SeaLev/reference/varnames.GPtail.html","id":null,"dir":"Reference","previous_headings":"","what":"GPtail variable names — varnames.pdMat","title":"GPtail variable names — varnames.pdMat","text":"methods extract set coefficients associated   model represented  object.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/varnames.GPtail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GPtail variable names — varnames.pdMat","text":"","code":"# S3 method for GPtail varnames(object, ...) # S3 method for GPtail varnames(object, ...) <- value"},{"path":"https://irsn.github.io/SeaLev/reference/varnames.GPtail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GPtail variable names — varnames.pdMat","text":"object object inheriting class GPtail representing     convolution distribution spline density GPD.  value vector replacement values variable names    associated object. must vector length 3.    variables : variable spline density distribution,    variable GPD variable convolution distribution.  ... used method.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/varnames.GPtail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GPtail variable names — varnames.pdMat","text":"Character vector variable names.","code":""},{"path":[]},{"path":"https://irsn.github.io/SeaLev/reference/varnames.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 generic function to extract the names of variables — varnames","title":"S3 generic function to extract the names of variables — varnames","text":"Extracts names variables object.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/varnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 generic function to extract the names of variables — varnames","text":"","code":"varnames(object, ...)"},{"path":"https://irsn.github.io/SeaLev/reference/varnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 generic function to extract the names of variables — varnames","text":"object object extract variables names.  ... arguments can used methods.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/varnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 generic function to extract the names of variables — varnames","text":"character vector representing names descriptions   variables.","code":""},{"path":[]},{"path":"https://irsn.github.io/SeaLev/reference/varnamesSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign names for variables — varnamesSet","title":"Assign names for variables — varnamesSet","text":"function generic; method functions can written handle   specific classes objects. Classes already methods   function include GPtail.","code":""},{"path":"https://irsn.github.io/SeaLev/reference/varnamesSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign names for variables — varnamesSet","text":"","code":"varnames(object, ...) <-  value"},{"path":"https://irsn.github.io/SeaLev/reference/varnamesSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign names for variables — varnamesSet","text":"object object representing structure variables, e.g.      multivariate model model involving several variables.  ... methods generic function may require     additional arguments.  value Value assigned variables associated     object. must character vector     length varnames(object).","code":""},{"path":"https://irsn.github.io/SeaLev/reference/varnamesSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign names for variables — varnamesSet","text":"Depends method function; see appropriate documentation.","code":""},{"path":[]}]
