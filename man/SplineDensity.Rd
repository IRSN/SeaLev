% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/SplineDensity.R
\name{SplineDensity}
\alias{SplineDensity}
\title{

  Build a spline density from a provided grid density

}

\usage{

SplineDensity(x, f,
              xmin = min(x), xmax = max(x),
              leftDerivEst = c(0L, 1L), rightDerivEst = c(0L, 1L),
              leftDeriv = NULL, rightDeriv = NULL,
              knots = NULL,
              nKnots = 24L,
              order = 4L,
              plot = TRUE,
              check = FALSE)
}

\arguments{
  
  \item{x}{

    Numeric vector of values at which the density is provided.

  }
  \item{f}{

    Numeric vector of density values corresponding to \code{x}.

  }
  \item{xmin}{

    Left (or lower) end-point of the distribution.
    
  }
  \item{xmax}{

    Right (or upper) end-point.

  }
  \item{leftDerivEst}{

    Integer vector giving the order of the derivatives that will be
    estimated from the finite differences of the points in \code{x} and
    \code{f}. These values will be used even if derivatives are
    provided.
    
  }
  \item{rightDerivEst}{

    Similar to \code{leftDerivEst}.

  }
  \item{leftDeriv}{

    Vector of known derivatives at left end-point (if any). The given
    values are for order \eqn{0} to \eqn{k-2} in that order where
    \eqn{k} is the order. Unknown values are to be given as \code{NA}.

  }
  \item{rightDeriv}{

    Similar to \code{rightDeriv} for the upper end-point.

  }
  \item{knots}{

    A numeric vector of knots in ascending order.

  }
  \item{nKnots}{

    Number of knots to be used if \code{knots} is not provided.

  }
  \item{order}{

    The spline order \eqn{k}, e.g. \eqn{k = 1} for a broken line spline
    and \code{k = 4} for a cubic spline.

  }
  \item{plot}{

    Logical. If \code{TRUE} a plot is provided.

  }
  \item{check}{

    Logical. When \code{TRUE}, some check of the computations are
    carried over and results are printed.
    
  }
}

\value{
  
  A list object that can be used for density computations. This object
  is given an S3 class \code{"SplineDensity"}. The structure of this
  list might evolve in the future life of the package.
  
}

\description{

  Build a spline density from a provided grid density.

  The methods \code{plot}, \code{print} and \code{predict} can be used.
  
}

\details{

  A spline approximation for a given density is found by a
  constrained regression. First, a suitable basis of B-splines is
  built. Then the coefficients are found in order to minimise the
  distance to the provided density values with constraints arising
  from boundary conditions and from the normalisation condition.
  Boundary conditions can be given. By default, the values of the
  density and of its first order derivative are taken equal to a
  finite difference estimation from \code{x} and \code{f}. This
  works correctly when the grid is fine enough, and when the
  provided values correspond to those of a continuous function with
  continuous derivative on the closed interval with end-points
  \code{xmin} and \code{xmax}.

}

\references{
  
  de Boor, C (2001) \emph{A Practical Guide to Splines}, revised
  edition. Springer-Verlag.

}

\section{Caution}{

  The spline is not warranted to be positive. This will be the case if
  positive density values are provided in \code{f} and if the grid is
  fine enough. 

}

\examples{
data(Brest.tide)
SD <- SplineDensity(x = Brest.tide$x, f = Brest.tide$y)
SD24 <- SplineDensity(x = Brest.tide$x, f = Brest.tide$y, nKnots = 24)

## approximate a bounded GPD (negative shape) by a spline density
shape <- 2 + rexp(1)
x <- seq(from = 0, to = 1, length.out = 200)
f <- (1 - x )^(shape - 1) * shape
SDGP <- SplineDensity(x = x, f = f)
plot(SDGP)
}

\author{

  Yves Deville

}

\seealso{
  
  \code{\link{rSplineDensity}} to generate randomly drawn objects
  (e.g. for tests). \code{\link{predict.SplineDensity}} for the
  evaluation at chosen points.

}

